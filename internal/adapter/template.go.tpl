// Code generated by github/pedidopago/adapter/cmd/adapter; DO NOT EDIT.

package {{.PackageName}}

{{if .Imports}}
import (
    {{range .Imports}}
    {{if .Name}}{{.Name}} "{{.Path}}"{{else}}"{{.Path}}"{{end}}
    {{end}}
)
{{end}}

{{range .Adapters}}

// {{.Name}} converts from {{.Src}} to {{.Dst}}.
func {{.Name}}(src {{.Src}}) (dst {{.Dst}}) {
    {{if .DstIsPtr}}
    dst = new({{.Dst}})
    {{end}}
    {{range .Fields}}
    {{if .Use}}
    dst.{{.To}} = {{.Use}}(src.{{.From}})
    {{else}}
    dst.{{.To}} = src.{{.From}}
    {{end}}
    {{end}}
    return dst
}

// {{.SliceName}} converts from []{{.Src}} to []{{.Dst}}.
func {{.SliceName}}(src []{{.Src}}) (dst []{{.Dst}}) {
    dst = make([]{{.Dst}}, 0, len(src))
    for _, v := range src {
        dst = append(dst, {{.Name}}(v))
    }
    return dst
}

{{end}}