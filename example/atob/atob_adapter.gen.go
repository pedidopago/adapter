// Code generated by github/pedidopago/adapter/cmd/adapter; DO NOT EDIT.

package atob

// UserAtoB converts from UserA to UserB.
func UserAtoB(src UserA) (dst UserB) {

	dst.Name = src.Name

	dst.Age = int8(src.Age)

	dst.MaxScore = f64tostr(src.Score)

	dst.Props = PropAToBSlice(src.Props)

	return dst
}

func UserAtoBSlice(src []UserA) (dst []UserB) {
	dst = make([]UserB, 0, len(src))
	for _, v := range src {
		dst = append(dst, UserAtoB(v))
	}
	return dst
}

// PropAToB converts from PropA to PropB.
func PropAToB(src PropA) (dst PropB) {

	dst.Name = src.Name

	dst.Value = atoim(src.Value)

	return dst
}

func PropAToBSlice(src []PropA) (dst []PropB) {
	dst = make([]PropB, 0, len(src))
	for _, v := range src {
		dst = append(dst, PropAToB(v))
	}
	return dst
}
